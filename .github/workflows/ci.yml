name: ci

on:
  schedule:
    - cron: '0 0 * * *'

  push:
    branches:
      - main
      - 'changeset-release/main'

  pull_request:
    branches:
      - main

env:
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  # Update package versions from changesets.
  version:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if:
      github.ref == 'refs/heads/main' && github.repository == 'remirror/backend'
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: check validity of changeset
        if: github.event.pull_request
        run: pnpm ci:version:check

      - name: create versions
        if: github.ref == 'refs/heads/main'
        uses: changesets/action@master
        with:
          version: pnpm ci:version
          commit: 'Update versions with changeset'
          title: 'Update versions with changeset'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Lint the project
  lint:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: lint files
        run: pnpm lint

  # Typecheck the project
  typecheck:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: typecheck project
        run: pnpm typecheck

  # Unit test and update coverage report
  unit_test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: run unit tests
        run: pnpm test

  # Build the project and run tests on built files.
  build_test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
      fail-fast: false

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: build project
        run: pnpm build

      - name: run unit tests
        run: pnpm test:build

  # Check that package sizes are within their boundaries
  size_check:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: build project
        run: pnpm build

      - name: check sizes
        run: pnpm size

  # Publish the public packages if all tests pass
  publish:
    timeout-minutes: 20
    needs: [lint, typecheck, unit_test, build_test, size_check]
    runs-on: ubuntu-latest
    if:
      github.ref == 'refs/heads/main' && github.repository == 'remirror/backend'

    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup caching
        uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14

      - name: install and audit
        uses: ./.github/actions/pnpm
        with:
          cache: ${{ env.PNPM_CACHE_FOLDER }}

      - name: build project
        run: pnpm build

      - name: publish npm release
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > $HOME/.npmrc
          pnpm release
          rm $HOME/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
